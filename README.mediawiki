[[File:http://9fb755195f5195b6c980-6921fb340d095e535a285f2d514557aa.r42.cf1.rackcdn.com/idea.png]]

== Hello Code Hacker! ==
How have you been? What brought you here?


=== 0) WWW, You and Us ===
==== 0.1) The links ====

For now, it's just three links for us, and a million web pages for a million locations on Earth

* [http://www.ilikeplaces.com  I Like Places]
* [http://www.facebook.com Facebook Fan Page]
* [https://www.pivotaltracker.com/projects/304913 Project Manager, where you can find out what really is going on in the code]

==== 0.2) How may we serve you? ====
* 0.2.1) Can we interest you in finding out what interesting places to visit, given any location on earth?
If so, head over to [http://www.ilikeplaces.com www.iLikePlaces.com] and search for any location on Earth.
You'll see a map with makers of interesting places in that area. Now, go visit them! Tell a friend!
* 0.2.2) Can we interest you in finding out, given any moment, the most interesting place to be?
We wish we could! Well, we have that bad habbit of pursuing our wishes '''With All We've Got'''. Stay tuned!
* 0.2.3) Can we interest you in planning out private events with close friends and family?
No, if you click "like", things aren't going to be all public exposing you to a lot of embarrassment.
Instead, head over to [http://www.ilikeplaces.com www.iLikePlaces.com] and '''Start a Moment'''.
Once you've done that, invite your friends and family to it.
'''Now you've got your own private moment'''. It's got a '''Talk Page''' to discuss your event stuff.
Hey, you can upload photos too!
* 0.2.4) Can we interest you in starting a movement on something you believe in something very badly?
Start a Tribe! Ah you guessed it right. You just have to visit  [http://www.ilikeplaces.com www.iLikePlaces.com].

There you go. That much we can offer you. Tell a friend!

[[#Hello_Code_Hacker|Back to Top^]]
----


=== 1) Looking for some code to use in your project? ===
==== 1.1) Try our Gists! ====
'''Go [https://gist.github.com/ravindranathakila here]'''. If you like what you see, share 'em all! If not, tell us where in comments :-)
==== 1.2) Still Unhappy? ====
Give us some time, we will update this section with a code walk through. Meanwhile maybe you'd like to '''have a look at [http://www.innowhere.com:8080/itsnat/feashow_servlet?itsnat_doc_name=feashow.main ItsNat]''' .
Make sure you'll not come back to us complaining how AWESOME ItsNat is!

[[#Hello_Code_Hacker|Back to Top^]]
----


=== 2) Sniffing around for some internal secrets? ===
We can help you. But who knows, we might lead you down a wrong trail ;-)
Okay, '''go [https://www.pivotaltracker.com/projects/304913 here]'''. Don't tell!

[[#Hello_Code_Hacker|Back to Top^]]
----


=== 3) Want to find the philosophy behind this project? ===
And you thought we just built [http://www.ilikeplaces.com www.ilikeplaces.com]? No way, there's a lot of thinking, passion and belief behind it!
==== 3.1) Very Very Very Very Private Socializing On Down Town ====
'''DT is a social network hysterically focused on privacy.'''
If you want only your family to see an event(called Moments) on DT, you can do it.
If it's just friends the secrets of that moment are safe with, you can make that happen.
'''It's very very very very very private!'''
==== 3.1) Down Town knows socializing is best done offline ====
DT wants you to use the website as less as possible.
Compare that with other social networks who are hungry to keep you online to click their ads.
DT just wants you to find ways to socialize in real life.
Once you've done that, you just head out and have fun with your friends and family.
Yes you can come back to discuss stuff before and after the event.
But mostly, Down Town makes a maximum effort to chase you out to socialize.
This is why updates can be '''autoplayed'''.
If a friend updates a photo or moment talk, you are automatically send there unless you '''pause''' the autoupdate.
See? We want you to get moving fast.
'''What's more fabulous than a social network that autoplays in front of your eyes, the latest updates!'''
==== 3.3) So What Is Down Town? ====
'''You tell us the time, even if its "now" and we'll tell you the most exciting place to be!'''

[[#Hello_Code_Hacker|Back to Top^]]
----


== Attributions ==

=== Eye - Thank you http://findicons.com/pack/2448/wpzoom_developer ===
=== Denise(Font) - Thank you Denise! http://budeni.com/  http://www.dafont.com/denise-b.d2982?l[]=10 ===
=== Corbis (Home Page) - Thank you Corbis ===
=== Wikipedia (Lock Image) - Thank you https://commons.wikimedia.org/wiki/File:Ambox_padlock_red.svg ===


== Live Deployments ==

=== DEPLOYMENT ON THE 4TH OF APRIL, 2012 ===
==== Update Cloud Keys... DONE ====
==== Minimizing stylesheets and scripts... DONE ====
==== Turn off debugging... DONE ====
==== Testing on different browsers... DONE ====
==== Uploading deployment files... DONE ====
==== Backing up existing working deployment... DONE ====
==== Replacing current deployment with new deployment... DONE ====
==== DEPLOYMENT COMPLETE! ====


== Live Deployment Template ==

==== Update Cloud Keys... DONE? ====
==== Minimizing stylesheets and scripts... DONE? ====
==== Turn off debugging... DONE? ====
==== Testing on different browsers... DONE? ====
==== Uploading deployment files... DONE? ====
==== Backing up existing working deployment... DONE? ====
==== Replacing current deployment with new deployment... DONE? ====
==== Add ehcache.xml to classpath and configure... DONE? ====
==== Add hazelcast.xml to classpath and configure... DONE? ====
==== DEPLOYMENT COMPLETE! ====

=== Just a huge dump of stuff we need from time to time. No specific order or correlation. ===

  //MAKE SURE LOCATIONID IS PRIMARY KEY, MODIFY FOLLOWING SCRIPT
        CREATE TABLE location(LOCATIONID BIGINT,CLEARANCE BIGINT,LOCATIONGEO1 VARCHAR(128),LOCATIONGEO2 VARCHAR(128),LOCATIONINFO VARCHAR(128),LOCATIONNAME VARCHAR(128), LOCATIONSUPERSET_LOCATION BIGINT, PRIMARY KEY (LOCATIONID) )
        CALL SYSCS_UTIL.SYSCS_IMPORT_TABLE('APP','LOCATION','location.dat','    ',null,null,0);
        import --connect jdbc:derby://www.ilikeplaces.com/ilp --driver org.apache.derby.jdbc.ClientDriver --username ilp --table location --hbase-create-table
        ./sqoop import --connect jdbc:derby://localhost:1527/ilp --driver org.apache.derby.jdbc.ClientDriver --username ilp -P  --table APP.LOCATION --hbase-create-table --split-by locationid
        ./sqoop import --connect jdbc:derby://localhost:1527/ilp --driver org.apache.derby.jdbc.ClientDriver --username ilp -P  --table APP.LOCATION --hbase-create-table --split-by locationid

        CALL SYSCS_UTIL.SYSCS_EXPORT_TABLE('ILP','LOCATION','locationtab.dat','','"','UTF-8');


        hbase org.apache.hadoop.hbase.mapreduce.ImportTsv -Dimporttsv.columns=HBASE_ROW_KEY,locationid,locationId:clearance,locationId:locationGeo1,locationId:locationGeo2,locationId:locationInfo,locationId:locationName,locationId:locationSuperSet location locationtab.dat

        public Long locationId;
        public Long clearance = 0L;
        public String locationName;
        public String locationInfo;
        public Location locationSuperSet;
        public String locationGeo1;
        public String locationGeo2;


        hdfs dfs -put locationtab.dat

        hdfs dfs -ls


        //MAKE SURE LOCATIONID IS PRIMARY KEY, MODIFY FOLLOWING SCRIPT
        CREATE TABLE location(LOCATIONID BIGINT,CLEARANCE BIGINT,LOCATIONGEO1 VARCHAR(128),LOCATIONGEO2 VARCHAR(128),LOCATIONINFO VARCHAR(128),LOCATIONNAME VARCHAR(128), LOCATIONSUPERSET_LOCATION BIGINT, PRIMARY KEY (LOCATIONID) )
        CALL SYSCS_UTIL.SYSCS_IMPORT_TABLE('APP','LOCATION','location.dat','    ',null,null,0);
        import --connect jdbc:derby://www.ilikeplaces.com/ilp --driver org.apache.derby.jdbc.ClientDriver --username ilp --table location --hbase-create-table
        ./sqoop import --connect jdbc:derby://localhost:1527/ilp --driver org.apache.derby.jdbc.ClientDriver --username ilp -P  --table APP.LOCATION --hbase-create-table --split-by locationid
        ./sqoop import --connect jdbc:derby://localhost:1527/ilp --driver org.apache.derby.jdbc.ClientDriver --username ilp -P  --table APP.LOCATION --hbase-create-table --split-by locationid

        CALL SYSCS_UTIL.SYSCS_EXPORT_TABLE('ILP','LOCATION','locationtab.dat','','"','UTF-8');


        hbase org.apache.hadoop.hbase.mapreduce.ImportTsv -Dimporttsv.columns=HBASE_ROW_KEY,locationid,locationId:clearance,locationId:locationGeo1,locationId:locationGeo2,locationId:locationInfo,locationId:locationName,locationId:locationSuperSet location locationtab.dat

        public Long locationId;
        public Long clearance = 0L;
        public String locationName;
        public String locationInfo;
        public Location locationSuperSet;
        public String locationGeo1;
        public String locationGeo2;


        hdfs dfs -put locationtab.dat

        hdfs dfs -ls



        query = "SELECT DISTINCT humansNetPeople FROM HumansNetPeople humansNetPeople inner join humansNetPeople.humansNetPeoples friend WHERE friend.humanId = :humanId"

javax.persistence.PersistenceException: Human
Caused by: javax.persistence.PersistenceException: Human
Caused by: org.apache.hadoop.hbase.TableNotFoundException: Human

Happens when datanuclues is run against an empty HBase installation. i.e. No tables.


Good to have bash_profile values for a java server.

alias k='kill -9'
alias pt='ps -ef|grep tomcat'
alias ph='ps -ef|grep hbase'
alias t='tail -f'
alias ll='ls -la'





enable 'Album'
enable 'Human'
enable 'HumansAlbum'
enable 'HumansAuthentication'
enable 'HumansAuthorization'
enable 'HumansIdentity'
enable 'HumansNet'
enable 'HumansNetPeople'
enable 'HumansPrivateEvent'
enable 'HumansPrivateLocation'
enable 'HumansPrivatePhoto'
enable 'HumansPublicPhoto'
enable 'HumansTribe'
enable 'HumansUnseen'
enable 'HumansWall'
enable 'Location'
enable 'LongMsg'
enable 'Map'
enable 'Msg'
enable 'Mute'
enable 'PrivateEvent'
enable 'PrivateLocation'
enable 'PrivatePhoto'
enable 'PublicPhoto'
enable 'Tribe'
enable 'Url'
enable 'Wall'
enable 'albumsalbumPhotos'
enable 'privateEventInvitesprivateEventsInvited'
enable 'privateEventOwnersprivateEventsOwned'
enable 'privateEventRejectsprivateEventsRejected'
enable 'privateEventViewersprivateEventsViewed'
enable 'privateLocationOwnersprivateLocationsOwned'
enable 'privateLocationViewersprivateLocationsViewed'
enable 'tribeMemberstribes'



disable 'Human'
disable 'HumansAlbum'
disable 'HumansAuthentication'
disable 'HumansAuthorization'
disable 'HumansIdentity'
disable 'HumansNet'
disable 'HumansNetPeople'
disable 'HumansPrivateEvent'
disable 'HumansPrivateLocation'
disable 'HumansPrivatePhoto'
disable 'HumansPublicPhoto'
disable 'HumansTribe'
disable 'HumansUnseen'
disable 'HumansWall'


alter 'Human',{NAME => 'humanId'}
alter 'HumansAlbum',{NAME => 'humanId'}
alter 'HumansAuthentication',{NAME => 'humanId'}
alter 'HumansAuthorization',{NAME => 'humanId'}
alter 'HumansIdentity',{NAME => 'humanId'}
alter 'HumansNet',{NAME => 'humanId'}
alter 'HumansNetPeople',{NAME => 'humanId'}
alter 'HumansPrivateEvent',{NAME => 'humanId'}
alter 'HumansPrivateLocation',{NAME => 'humanId'}
alter 'HumansPrivatePhoto',{NAME => 'humanId'}
alter 'HumansPublicPhoto',{NAME => 'humanId'}
alter 'HumansTribe',{NAME => 'humanId'}
alter 'HumansUnseen',{NAME => 'humanId'}
alter 'HumansWall',{NAME => 'humanId'}


package ai.ilikeplaces.servlets;

import ai.ilikeplaces.util.Loggers;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Created by IntelliJ IDEA.
 * User: Ravindranath Akila
 * Date: 1/7/12
 * Time: 12:22 PM
 */
public class ServletOAuthFacebook extends AbstractOAuth {

    @Override
    OAuthProvider oAuthProvider() {
        return new OAuthProvider(
                "https://www.facebook.com/dialog/oauth",
                new OAuthAuthorizationRequest(
                        "code",
                        "139373316127498",
                        "http://www.ilikeplaces.com/oauth2",
                        null,
                        null
                ));
    }

    /**
     * <b>code</b>
     * <p/>
     * REQUIRED.  The authorization code generated by the
     * authorization server.  The authorization code MUST expire
     * shortly after it is issued to mitigate the risk of leaks.  A
     * maximum authorization code lifetime of 10 minutes is
     * RECOMMENDED.  The client MUST NOT use the authorization code
     * more than once.  If an authorization code is used more than
     * once, the authorization server MUST deny the request and SHOULD
     * attempt to revoke all tokens previously issued based on that
     * authorization code.  The authorization code is bound to the
     * client identifier and redirection URI.
     * <p/>
     * <b>state</b>
     * <p/>
     * REQUIRED if the "state" parameter was present in the client
     * authorization request.  The exact value received from the
     *
     * @param request
     * @param response
     */
    @Override
    void processRequest(final HttpServletRequest request, final HttpServletResponse response) {
        final OAuthAuthorizationResponse oAuthAuthorizationResponse = getOAuthAuthorizationResponse(request, response);
        if (oAuthAuthorizationResponse != null) {
            Loggers.INFO.info("" + code + ":" + request.getParameter(code));
        } else {
            // we ignore since a redirect will happen
        }
    }
}


/*

https://www.facebook.com/dialog/oauth?client_id=139373316127498&redirect_uri=http://WWW.ilikeplaces.com/oauth2&scope=email

http://www.ilikeplaces.com/oauth2?code=AQAGQa3sr_AolE2ocDLLnq0NYDgJ8TYcATJpwHnC6XKQfDPbxBoxr0lfE9TO4V2l7YXXy35bY3pVmV69F5vM3bWROEyIPD6F5QNPptb2tLTPdQHZFiAEiUOwsrs3hgJDxStOhLRwFRslgRfhj8NZdIVYvZVGYs7w9yT06w6KoNaNIDwS0e2an9tp86QV5eh1mV8#_=_


https://graph.facebook.com/oauth/access_token?client_id=139373316127498&redirect_uri=http://WWW.ilikeplaces.com/oauth2&client_secret=56a2340af5eb11db36258f9f7a07b2b9&code=AQAGQa3sr_AolE2ocDLLnq0NYDgJ8TYcATJpwHnC6XKQfDPbxBoxr0lfE9TO4V2l7YXXy35bY3pVmV69F5vM3bWROEyIPD6F5QNPptb2tLTPdQHZFiAEiUOwsrs3hgJDxStOhLRwFRslgRfhj8NZdIVYvZVGYs7w9yT06w6KoNaNIDwS0e2an9tp86QV5eh1mV8#_=_


Without logging in, calling the above url gives

access_token=AAABZBwmDZCuwoBAEtNOfOITUpi0oJFCZAHD0KHOPNiyBErPMhu1k3eXa7RGrrPy789r4OgoZCqST53T9cJKIZBPDhb4yJj2NrSpbb8VbeTwZDZD&expires=4051

Without logging in means calling it from a cookieless session, like the server



Running this :
https://graph.facebook.com/me?access_token=AAABZBwmDZCuwoBAEtNOfOITUpi0oJFCZAHD0KHOPNiyBErPMhu1k3eXa7RGrrPy789r4OgoZCqST53T9cJKIZBPDhb4yJj2NrSpbb8VbeTwZDZD


Returns:


{
   "id": "726280855",
   "name": "Ravindranath Akila",
   "first_name": "Ravindranath",
   "last_name": "Akila",
   "link": "http://www.facebook.com/ravindranathakila",
   "username": "ravindranathakila",
   "location": {
      "id": "",
      "name": null
   },
   "gender": "male",
   "email": "ravindranathakila\u0040gmail.com",
   "timezone": 5.5,
   "locale": "en_US",
   "verified": true,
   "updated_time": "2011-12-24T13:54:01+0000"
}



https://graph.facebook.com/ravindranathakila

{
   "id": "726280855",
   "name": "Ravindranath Akila",
   "first_name": "Ravindranath",
   "last_name": "Akila",
   "username": "ravindranathakila",
   "gender": "male",
   "locale": "en_US"
}




*/

